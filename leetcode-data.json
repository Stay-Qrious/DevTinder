{
  "problems": [
    {
      "id": 1,
      "name": "Pattern 1: Rectangular Star Pattern",
      "link": "https://www.codingninjas.com/studio/problems/n-forest_6570177"
    },
    {
      "id": 2,
      "name": "Pattern 2: Right-Angled Triangle Pattern",
      "link": "https://www.codingninjas.com/studio/problems/right-angled-triangle_6581892"
    },
    {
      "id": 3,
      "name": "Pattern 3: Right-Angled Number Pyramid",
      "link": "https://www.codingninjas.com/studio/problems/right-angled-number-pyramid_6581921"
    },
    {
      "id": 4,
      "name": "Pattern 4: Right-Angled Number Pyramid - II",
      "link": "https://www.codingninjas.com/studio/problems/right-angled-number-pyramid---ii_6581893"
    },
    {
      "id": 5,
      "name": "Pattern 5: Inverted Right Pyramid",
      "link": "https://www.codingninjas.com/studio/problems/seeding_6581892"
    },
    {
      "id": 6,
      "name": "Count Digits",
      "link": "https://www.codingninjas.com/studio/problems/count-digits_8416387"
    },
    {
      "id": 7,
      "name": "Reverse Integer",
      "link": "https://leetcode.com/problems/reverse-integer/"
    },
    {
      "id": 8,
      "name": "Palindrome Number",
      "link": "https://leetcode.com/problems/palindrome-number/"
    },
    {
      "id": 9,
      "name": "GCD or HCF",
      "link": "https://www.codingninjas.com/studio/problems/hcf-and-lcm_840448"
    },
    {
      "id": 10,
      "name": "Armstrong Numbers",
      "link": "https://leetcode.com/problems/armstrong-number/"
    },
    {
      "id": 11,
      "name": "Print all Divisors",
      "link": "https://www.codingninjas.com/studio/problems/print-all-divisors-of-a-number_1164188"
    },
    {
      "id": 12,
      "name": "Check for Prime",
      "link": "https://www.codingninjas.com/studio/problems/check-prime_624934"
    },
    {
      "id": 13,
      "name": "Print Name N times using Recursion",
      "link": "https://www.codingninjas.com/studio/problems/print-n-times_8380707"
    },
    {
      "id": 14,
      "name": "Print 1 to N using Recursion",
      "link": "https://www.codingninjas.com/studio/problems/print-1-to-n_628290"
    },
    {
      "id": 16,
      "name": "Sum of first N numbers",
      "link": "https://www.codingninjas.com/studio/problems/sum-of-first-n-numbers_8876068"
    },
    {
      "id": 17,
      "name": "Factorial of N numbers",
      "link": "https://www.codingninjas.com/studio/problems/factorial-numbers-not-greater-than-n_8365435"
    },
    {
      "id": 18,
      "name": "Reverse an Array",
      "link": "https://www.codingninjas.com/studio/problems/reverse-an-array_8365444"
    },
    {
      "id": 19,
      "name": "Check if a string is Palindrome or not",
      "link": "https://leetcode.com/problems/valid-palindrome/"
    },
    {
      "id": 20,
      "name": "Fibonacci Number",
      "link": "https://leetcode.com/problems/fibonacci-number/"
    },
    {
      "id": 21,
      "name": "Counting frequencies of array elements",
      "link": "https://www.codingninjas.com/studio/problems/count-frequency-in-a-range_8365446"
    },
    {
      "id": 22,
      "name": "Find the highest/lowest frequency element",
      "link": "https://www.codingninjas.com/studio/problems/k-most-occurrent-numbers_625382"
    },
    {
      "id": 23,
      "name": "Selection Sort",
      "link": "https://www.codingninjas.com/studio/problems/selection-sort_624469"
    },
    {
      "id": 24,
      "name": "Bubble Sort",
      "link": "https://www.codingninjas.com/studio/problems/bubble-sort_624380"
    },
    {
      "id": 25,
      "name": "Insertion Sort",
      "link": "https://www.codingninjas.com/studio/problems/insertion-sort_624381"
    },
    {
      "id": 26,
      "name": "Merge Sort",
      "link": "https://www.codingninjas.com/studio/problems/merge-sort_920442"
    },
    {
      "id": 27,
      "name": "Quick Sort",
      "link": "https://www.codingninjas.com/studio/problems/quick-sort_983625"
    },
    {
      "id": 28,
      "name": "Recursive Bubble Sort",
      "link": "https://www.codingninjas.com/studio/problems/recursive-bubble-sort_624382"
    },
    {
      "id": 29,
      "name": "Recursive Insertion Sort",
      "link": "https://www.codingninjas.com/studio/problems/recursive-insertion-sort_983635"
    },
    {
      "id": 30,
      "name": "Largest Element in Array",
      "link": "https://www.codingninjas.com/studio/problems/largest-element-in-the-array-largest-element-in-the-array_5026279"
    },
    {
      "id": 31,
      "name": "Second Largest Element in Array",
      "link": "https://www.codingninjas.com/studio/problems/ninja-and-the-second-order-statistics_6581960"
    },
    {
      "id": 32,
      "name": "Check if Array is Sorted",
      "link": "https://www.codingninjas.com/studio/problems/ninja-and-the-sorted-check_6581957"
    },
    {
      "id": 33,
      "name": "Remove Duplicates from Sorted Array",
      "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/"
    },
    {
      "id": 34,
      "name": "Left Rotate Array by One",
      "link": "https://www.codingninjas.com/studio/problems/left-rotate-an-array-by-one_5026278"
    },
    {
      "id": 35,
      "name": "Rotate Array",
      "link": "https://leetcode.com/problems/rotate-array/"
    },
    {
      "id": 36,
      "name": "Move Zeros to End",
      "link": "https://leetcode.com/problems/move-zeroes/"
    },
    {
      "id": 37,
      "name": "Linear Search",
      "link": "https://www.codingninjas.com/studio/problems/linear-search_6922070"
    },
    {
      "id": 38,
      "name": "Union of Two Sorted Arrays",
      "link": "https://www.codingninjas.com/studio/problems/sorted-array_6613259"
    },
    {
      "id": 39,
      "name": "Find Missing Number",
      "link": "https://leetcode.com/problems/missing-number/"
    },
    {
      "id": 40,
      "name": "Maximum Consecutive Ones",
      "link": "https://leetcode.com/problems/max-consecutive-ones/"
    },
    {
      "id": 41,
      "name": "Find the number that appears once",
      "link": "https://leetcode.com/problems/single-number/"
    },
    {
      "id": 42,
      "name": "Longest Subarray with given Sum K(Positives)",
      "link": "https://www.codingninjas.com/studio/problems/longest-subarray-with-sum-k_6682399"
    },
    {
      "id": 43,
      "name": "Longest Subarray with sum K (Positives + Negatives)",
      "link": "https://www.codingninjas.com/studio/problems/longest-subarray-with-sum-k_5713505"
    },
    {
      "id": 44,
      "name": "Two Sum",
      "link": "https://leetcode.com/problems/two-sum/"
    },
    {
      "id": 45,
      "name": "Sort Colors",
      "link": "https://leetcode.com/problems/sort-colors/"
    },
    {
      "id": 46,
      "name": "Majority Element",
      "link": "https://leetcode.com/problems/majority-element/"
    },
    {
      "id": 47,
      "name": "Kadane's Algorithm",
      "link": "https://leetcode.com/problems/maximum-subarray/"
    },
    {
      "id": 48,
      "name": "Print subarray with maximum subarray sum",
      "link": "https://www.codingninjas.com/studio/problems/subarray-with-maximum-sum_6890388"
    },
    {
      "id": 49,
      "name": "Best Time to Buy and Sell Stock",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/"
    },
    {
      "id": 50,
      "name": "Rearrange Array Elements by Sign",
      "link": "https://leetcode.com/problems/rearrange-array-elements-by-sign/"
    },
    {
      "id": 51,
      "name": "Next Permutation",
      "link": "https://leetcode.com/problems/next-permutation/"
    },
    {
      "id": 52,
      "name": "Leaders in an Array",
      "link": "https://www.codingninjas.com/studio/problems/superior-elements_6783446"
    },
    {
      "id": 53,
      "name": "Longest Consecutive Sequence",
      "link": "https://leetcode.com/problems/longest-consecutive-sequence/"
    },
    {
      "id": 54,
      "name": "Set Matrix Zeroes",
      "link": "https://leetcode.com/problems/set-matrix-zeroes/"
    },
    {
      "id": 55,
      "name": "Rotate Image",
      "link": "https://leetcode.com/problems/rotate-image/"
    },
    {
      "id": 56,
      "name": "Spiral Matrix",
      "link": "https://leetcode.com/problems/spiral-matrix/"
    },
    {
      "id": 57,
      "name": "Count Subarrays with Given Sum",
      "link": "https://www.codingninjas.com/studio/problems/subarray-sums-i_1467103"
    },
    {
      "id": 58,
      "name": "Pascal's Triangle",
      "link": "https://leetcode.com/problems/pascals-triangle/"
    },
    {
      "id": 59,
      "name": "Majority Element II",
      "link": "https://leetcode.com/problems/majority-element-ii/"
    },
    {
      "id": 60,
      "name": "3Sum",
      "link": "https://leetcode.com/problems/3sum/"
    },
    {
      "id": 61,
      "name": "4Sum",
      "link": "https://leetcode.com/problems/4sum/"
    },
    {
      "id": 62,
      "name": "Largest subarray with 0 sum",
      "link": "https://www.codingninjas.com/studio/problems/largest-subarray-with-zero-sum_6783450"
    },
    {
      "id": 63,
      "name": "Count the number of subarrays with given xor K",
      "link": "https://www.codingninjas.com/studio/problems/subarrays-with-xor-k_6826258"
    },
    {
      "id": 64,
      "name": "Merge Overlapping Sub-intervals",
      "link": "https://leetcode.com/problems/merge-intervals/"
    },
    {
      "id": 65,
      "name": "Merge two Sorted Arrays without Extra Space",
      "link": "https://leetcode.com/problems/merge-sorted-array/"
    },
    {
      "id": 66,
      "name": "Find the repeating and missing numbers",
      "link": "https://www.codingninjas.com/studio/problems/missing-and-repeating-numbers_6828164"
    },
    {
      "id": 67,
      "name": "Count Inversions",
      "link": "https://www.codingninjas.com/studio/problems/count-inversions_615"
    },
    {
      "id": 68,
      "name": "Reverse Pairs",
      "link": "https://leetcode.com/problems/reverse-pairs/"
    },
    {
      "id": 69,
      "name": "Maximum Product Subarray",
      "link": "https://leetcode.com/problems/maximum-product-subarray/"
    },
    {
      "id": 70,
      "name": "Binary Search",
      "link": "https://leetcode.com/problems/binary-search/"
    },
    {
      "id": 71,
      "name": "Implement Lower Bound",
      "link": "https://www.codingninjas.com/studio/problems/lower-bound_8165382"
    },
    {
      "id": 72,
      "name": "Implement Upper Bound",
      "link": "https://www.codingninjas.com/studio/problems/implement-upper-bound_8165383"
    },
    {
      "id": 73,
      "name": "Search Insert Position",
      "link": "https://leetcode.com/problems/search-insert-position/"
    },
    {
      "id": 74,
      "name": "Floor/Ceil in Sorted Array",
      "link": "https://www.codingninjas.com/studio/problems/ceiling-in-a-sorted-array_1825401"
    },
    {
      "id": 75,
      "name": "Find First and Last Position of Element in Sorted Array",
      "link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/"
    },
    {
      "id": 76,
      "name": "Count Occurrences in Sorted Array",
      "link": "https://www.codingninjas.com/studio/problems/occurrence-of-x-in-a-sorted-array_630456"
    },
    {
      "id": 77,
      "name": "Search in Rotated Sorted Array",
      "link": "https://leetcode.com/problems/search-in-rotated-sorted-array/"
    },
    {
      "id": 78,
      "name": "Search in Rotated Sorted Array II",
      "link": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/"
    },
    {
      "id": 79,
      "name": "Find Minimum in Rotated Sorted Array",
      "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/"
    },
    {
      "id": 80,
      "name": "Find out how many times array has been rotated",
      "link": "https://www.codingninjas.com/studio/problems/rotation_7449070"
    },
    {
      "id": 81,
      "name": "Single Element in a Sorted Array",
      "link": "https://leetcode.com/problems/single-element-in-a-sorted-array/"
    },
    {
      "id": 82,
      "name": "Find Peak Element",
      "link": "https://leetcode.com/problems/find-peak-element/"
    },
    {
      "id": 83,
      "name": "Square Root of a number",
      "link": "https://leetcode.com/problems/sqrtx/"
    },
    {
      "id": 84,
      "name": "Find Nth Root of a Number",
      "link": "https://www.codingninjas.com/studio/problems/nth-root-of-m_1062679"
    },
    {
      "id": 85,
      "name": "Koko Eating Bananas",
      "link": "https://leetcode.com/problems/koko-eating-bananas/"
    },
    {
      "id": 86,
      "name": "Minimum days to make M bouquets",
      "link": "https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/"
    },
    {
      "id": 87,
      "name": "Find the Smallest Divisor Given a Threshold",
      "link": "https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/"
    },
    {
      "id": 88,
      "name": "Capacity to Ship Packages within D Days",
      "link": "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/"
    },
    {
      "id": 89,
      "name": "Kth Missing Positive Number",
      "link": "https://leetcode.com/problems/kth-missing-positive-number/"
    },
    {
      "id": 90,
      "name": "Aggressive Cows",
      "link": "https://www.codingninjas.com/studio/problems/aggressive-cows_1082559"
    },
    {
      "id": 91,
      "name": "Book Allocation Problem",
      "link": "https://www.codingninjas.com/studio/problems/allocate-books_1090540"
    },
    {
      "id": 92,
      "name": "Split Array Largest Sum",
      "link": "https://leetcode.com/problems/split-array-largest-sum/"
    },
    {
      "id": 93,
      "name": "Painter's Partition Problem",
      "link": "https://www.codingninjas.com/studio/problems/painter-s-partition-problem_1089557"
    },
    {
      "id": 94,
      "name": "Minimize Max Distance to Gas Station",
      "link": "https://www.codingninjas.com/studio/problems/minimise-max-distance_7541449"
    },
    {
      "id": 95,
      "name": "Median of 2 sorted arrays",
      "link": "https://leetcode.com/problems/median-of-two-sorted-arrays/"
    },
    {
      "id": 96,
      "name": "Kth element of 2 sorted arrays",
      "link": "https://www.codingninjas.com/studio/problems/k-th-element-of-2-sorted-arrays_1164159"
    },
    {
      "id": 97,
      "name": "Find the row with maximum number of 1's",
      "link": "https://www.codingninjas.com/studio/problems/row-of-a-matrix-with-maximum-ones_982768"
    },
    {
      "id": 98,
      "name": "Search a 2D Matrix",
      "link": "https://leetcode.com/problems/search-a-2d-matrix/"
    },
    {
      "id": 99,
      "name": "Search a 2D Matrix II",
      "link": "https://leetcode.com/problems/search-a-2d-matrix-ii/"
    },
    {
      "id": 100,
      "name": "Find Peak Element II",
      "link": "https://leetcode.com/problems/find-a-peak-element-ii/"
    },
    {
      "id": 101,
      "name": "Matrix Median",
      "link": "https://www.codingninjas.com/studio/problems/median-of-a-row-wise-sorted-matrix_1115473"
    },
    {
      "id": 102,
      "name": "Remove outermost Parentheses",
      "link": "https://leetcode.com/problems/remove-outermost-parentheses/"
    },
    {
      "id": 103,
      "name": "Reverse Words in a String",
      "link": "https://leetcode.com/problems/reverse-words-in-a-string/"
    },
    {
      "id": 104,
      "name": "Largest Odd Number in String",
      "link": "https://leetcode.com/problems/largest-odd-number-in-string/"
    },
    {
      "id": 105,
      "name": "Longest Common Prefix",
      "link": "https://leetcode.com/problems/longest-common-prefix/"
    },
    {
      "id": 106,
      "name": "Isomorphic Strings",
      "link": "https://leetcode.com/problems/isomorphic-strings/"
    },
    {
      "id": 107,
      "name": "Check whether one string is a rotation of another",
      "link": "https://leetcode.com/problems/rotate-string/"
    },
    {
      "id": 108,
      "name": "Check if two strings are anagram of each other",
      "link": "https://leetcode.com/problems/valid-anagram/"
    },
    {
      "id": 109,
      "name": "Sort Characters by Frequency",
      "link": "https://leetcode.com/problems/sort-characters-by-frequency/"
    },
    {
      "id": 110,
      "name": "Maximum Nesting Depth of Parentheses",
      "link": "https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses/"
    },
    {
      "id": 111,
      "name": "Roman to Integer",
      "link": "https://leetcode.com/problems/roman-to-integer/"
    },
    {
      "id": 112,
      "name": "Integer to Roman",
      "link": "https://leetcode.com/problems/integer-to-roman/"
    },
    {
      "id": 113,
      "name": "Implement Atoi",
      "link": "https://leetcode.com/problems/string-to-integer-atoi/"
    },
    {
      "id": 114,
      "name": "Count Number of Substrings",
      "link": "https://www.codingninjas.com/studio/problems/count-with-k-different-characters_1214627"
    },
    {
      "id": 115,
      "name": "Longest Palindromic Substring",
      "link": "https://leetcode.com/problems/longest-palindromic-substring/"
    },
    {
      "id": 117,
      "name": "Introduction to LinkedList",
      "link": "https://www.codingninjas.com/studio/problems/introduction-to-linked-list_8144737"
    },
    {
      "id": 118,
      "name": "Inserting a node in LinkedList",
      "link": "https://www.codingninjas.com/studio/problems/insert-node-at-the-beginning_8144739"
    },
    {
      "id": 119,
      "name": "Deleting a node in LinkedList",
      "link": "https://www.codingninjas.com/studio/problems/delete-node-of-linked-list_8160463"
    },
    {
      "id": 120,
      "name": "Find the length of the linkedlist",
      "link": "https://www.codingninjas.com/studio/problems/count-nodes-of-linked-list_5884"
    },
    {
      "id": 121,
      "name": "Search an element in the LinkedList",
      "link": "https://www.codingninjas.com/studio/problems/search-in-a-linked-list_975381"
    },
    {
      "id": 122,
      "name": "Introduction to Doubly LinkedList",
      "link": "https://www.codingninjas.com/studio/problems/introduction-to-doubly-linked-list_8160413"
    },
    {
      "id": 123,
      "name": "Insert at end of Doubly LinkedList",
      "link": "https://www.codingninjas.com/studio/problems/insert-at-end-of-doubly-linked-list_8160464"
    },
    {
      "id": 124,
      "name": "Delete Last Node of a Doubly LinkedList",
      "link": "https://www.codingninjas.com/studio/problems/delete-last-node-of-a-doubly-linked-list_8160469"
    },
    {
      "id": 125,
      "name": "Reverse a Doubly LinkedList",
      "link": "https://www.codingninjas.com/studio/problems/reverse-a-doubly-linked-list_1116098"
    },
    {
      "id": 126,
      "name": "Middle of the LinkedList",
      "link": "https://leetcode.com/problems/middle-of-the-linked-list/"
    },
    {
      "id": 127,
      "name": "Reverse a LinkedList",
      "link": "https://leetcode.com/problems/reverse-linked-list/"
    },
    {
      "id": 128,
      "name": "Linked List Cycle",
      "link": "https://leetcode.com/problems/linked-list-cycle/"
    },
    {
      "id": 129,
      "name": "Linked List Cycle II",
      "link": "https://leetcode.com/problems/linked-list-cycle-ii/"
    },
    {
      "id": 130,
      "name": "Length of Loop in LL",
      "link": "https://www.codingninjas.com/studio/problems/find-length-of-loop_8160455"
    },
    {
      "id": 131,
      "name": "Check if LL is palindrome or not",
      "link": "https://leetcode.com/problems/palindrome-linked-list/"
    },
    {
      "id": 132,
      "name": "Segregate odd and even nodes in LL",
      "link": "https://leetcode.com/problems/odd-even-linked-list/"
    },
    {
      "id": 133,
      "name": "Remove Nth node from the back of the LL",
      "link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/"
    },
    {
      "id": 134,
      "name": "Delete the middle node of LL",
      "link": "https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/"
    },
    {
      "id": 135,
      "name": "Sort a LL",
      "link": "https://leetcode.com/problems/sort-list/"
    },
    {
      "id": 136,
      "name": "Sort a LL of 0's, 1's and 2's",
      "link": "https://www.codingninjas.com/studio/problems/sort-linked-list-of-0s-1s-2s_1071937"
    },
    {
      "id": 137,
      "name": "Find intersection point of Y LL",
      "link": "https://leetcode.com/problems/intersection-of-two-linked-lists/"
    },
    {
      "id": 138,
      "name": "Add 1 to a number represented by LL",
      "link": "https://www.codingninjas.com/studio/problems/add-one-to-a-number-represented-as-linked-list_920557"
    },
    {
      "id": 139,
      "name": "Add two numbers represented as LL",
      "link": "https://leetcode.com/problems/add-two-numbers/"
    },
    {
      "id": 140,
      "name": "Reverse LL in groups of given size K",
      "link": "https://leetcode.com/problems/reverse-nodes-in-k-group/"
    },
    {
      "id": 141,
      "name": "Rotate a LL",
      "link": "https://leetcode.com/problems/rotate-list/"
    },
    {
      "id": 142,
      "name": "Flattening a LL",
      "link": "https://www.codingninjas.com/studio/problems/flatten-a-linked-list_1112655"
    },
    {
      "id": 143,
      "name": "Clone/Copy LL with random and next pointer",
      "link": "https://leetcode.com/problems/copy-list-with-random-pointer/"
    },
    {
      "id": 144,
      "name": "Subset Sums",
      "link": "https://www.codingninjas.com/studio/problems/subset-sum_3843086"
    },
    {
      "id": 145,
      "name": "Subsets II",
      "link": "https://leetcode.com/problems/subsets-ii/"
    },
    {
      "id": 146,
      "name": "Combination Sum",
      "link": "https://leetcode.com/problems/combination-sum/"
    },
    {
      "id": 147,
      "name": "Combination Sum II",
      "link": "https://leetcode.com/problems/combination-sum-ii/"
    },
    {
      "id": 148,
      "name": "Palindrome Partitioning",
      "link": "https://leetcode.com/problems/palindrome-partitioning/"
    },
    {
      "id": 149,
      "name": "Letter Combinations of a Phone Number",
      "link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/"
    },
    {
      "id": 150,
      "name": "Generate Parentheses",
      "link": "https://leetcode.com/problems/generate-parentheses/"
    },
    {
      "id": 151,
      "name": "Generate all binary strings",
      "link": "https://www.codingninjas.com/studio/problems/generate-all-binary-strings_8180692"
    },
    {
      "id": 152,
      "name": "Word Search",
      "link": "https://leetcode.com/problems/word-search/"
    },
    {
      "id": 153,
      "name": "N-Queens",
      "link": "https://leetcode.com/problems/n-queens/"
    },
    {
      "id": 154,
      "name": "Rat in a Maze",
      "link": "https://www.codingninjas.com/studio/problems/rat-in-a-maze_8842357"
    },
    {
      "id": 155,
      "name": "Word Break II",
      "link": "https://leetcode.com/problems/word-break-ii/"
    },
    {
      "id": 156,
      "name": "Introduction to Bit Manipulation",
      "link": "https://www.codingninjas.com/studio/problems/bit-manipulation_8142533"
    },
    {
      "id": 157,
      "name": "Check if the i-th bit is set or not",
      "link": "https://www.codingninjas.com/studio/problems/check-whether-k-th-bit-is-set-or-not_5026446"
    },
    {
      "id": 158,
      "name": "Check if a number is odd or even",
      "link": "https://www.codingninjas.com/studio/problems/odd-even_7993579"
    },
    {
      "id": 159,
      "name": "Check if a number is power of 2 or not",
      "link": "https://leetcode.com/problems/power-of-two/"
    },
    {
      "id": 160,
      "name": "Count the number of set bits",
      "link": "https://leetcode.com/problems/number-of-1-bits/"
    },
    {
      "id": 161,
      "name": "Set/Unset the rightmost unset bit",
      "link": "https://www.codingninjas.com/studio/problems/set-the-rightmost-unset-bit_8160456"
    },
    {
      "id": 162,
      "name": "Swap two numbers",
      "link": "https://www.codingninjas.com/studio/problems/swap-two-numbers_1380853"
    },
    {
      "id": 163,
      "name": "Divide two integers without using multiplication, division and mod operator",
      "link": "https://leetcode.com/problems/divide-two-integers/"
    },
    {
      "id": 164,
      "name": "Count number of bits to be flipped to convert A to B",
      "link": "https://www.codingninjas.com/studio/problems/flip-bits_8160405"
    },
    {
      "id": 165,
      "name": "Find the number that appears odd number of times",
      "link": "https://www.codingninjas.com/studio/problems/find-xor-of-numbers-from-l-to-r_8160412"
    },
    {
      "id": 166,
      "name": "Power Set",
      "link": "https://leetcode.com/problems/subsets/"
    },
    {
      "id": 167,
      "name": "Find MSB in O(1)",
      "link": "https://www.codingninjas.com/studio/problems/find-msb_8160402"
    },
    {
      "id": 168,
      "name": "Find square of a number without using multiplication or division operators",
      "link": "https://www.codingninjas.com/studio/problems/square-of-a-number_1112623"
    },
    {
      "id": 169,
      "name": "Print Prime Factors of a Number",
      "link": "https://www.codingninjas.com/studio/problems/prime-factorisation_1760849"
    },
    {
      "id": 170,
      "name": "All Divisors of a Number",
      "link": "https://www.codingninjas.com/studio/problems/print-all-divisors-of-a-number_1164188"
    },
    {
      "id": 171,
      "name": "Sieve of Eratosthenes",
      "link": "https://www.codingninjas.com/studio/problems/sieve-of-eratosthenes_1214151"
    },
    {
      "id": 172,
      "name": "Find Prime Factorization of a Number",
      "link": "https://www.codingninjas.com/studio/problems/prime-factorisation_1760849"
    },
    {
      "id": 173,
      "name": "Implement Stack using Arrays",
      "link": "https://www.codingninjas.com/studio/problems/stack-implementation-using-array_3210209"
    },
    {
      "id": 174,
      "name": "Implement Queue using Arrays",
      "link": "https://www.codingninjas.com/studio/problems/implement-queue-using-arrays_8390825"
    },
    {
      "id": 175,
      "name": "Implement Stack using Queue",
      "link": "https://leetcode.com/problems/implement-stack-using-queues/"
    },
    {
      "id": 176,
      "name": "Implement Queue using Stack",
      "link": "https://leetcode.com/problems/implement-queue-using-stacks/"
    },
    {
      "id": 177,
      "name": "Check for balanced parentheses",
      "link": "https://leetcode.com/problems/valid-parentheses/"
    },
    {
      "id": 178,
      "name": "Implement Min Stack",
      "link": "https://leetcode.com/problems/min-stack/"
    },
    {
      "id": 179,
      "name": "Infix to Postfix Conversion",
      "link": "https://www.codingninjas.com/studio/problems/infix-to-postfix_1382146"
    },
    {
      "id": 180,
      "name": "Prefix to Infix Conversion",
      "link": "https://www.codingninjas.com/studio/problems/prefix-to-infix_1215000"
    },
    {
      "id": 181,
      "name": "Prefix to Postfix Conversion",
      "link": "https://www.codingninjas.com/studio/problems/prefix-to-postfix_1215001"
    },
    {
      "id": 182,
      "name": "Postfix to Prefix Conversion",
      "link": "https://www.codingninjas.com/studio/problems/postfix-to-prefix_1215002"
    },
    {
      "id": 183,
      "name": "Postfix to Infix",
      "link": "https://www.codingninjas.com/studio/problems/postfix-to-infix_1215003"
    },
    {
      "id": 184,
      "name": "Convert Infix To Prefix Notation",
      "link": "https://www.codingninjas.com/studio/problems/convert-infix-to-prefix-notation_1215004"
    },
    {
      "id": 185,
      "name": "Next Greater Element",
      "link": "https://leetcode.com/problems/next-greater-element-i/"
    },
    {
      "id": 186,
      "name": "Next Greater Element II",
      "link": "https://leetcode.com/problems/next-greater-element-ii/"
    },
    {
      "id": 187,
      "name": "Next Smaller Element",
      "link": "https://www.codingninjas.com/studio/problems/next-smaller-element_1112581"
    },
    {
      "id": 188,
      "name": "Number of NGEs to the right",
      "link": "https://www.codingninjas.com/studio/problems/number-of-nges-to-the-right_8365549"
    },
    {
      "id": 189,
      "name": "Trapping Rainwater",
      "link": "https://leetcode.com/problems/trapping-rain-water/"
    },
    {
      "id": 190,
      "name": "Sum of subarray minimum",
      "link": "https://leetcode.com/problems/sum-of-subarray-minimums/"
    },
    {
      "id": 191,
      "name": "Asteroid Collision",
      "link": "https://leetcode.com/problems/asteroid-collision/"
    },
    {
      "id": 192,
      "name": "Sum of subarray ranges",
      "link": "https://leetcode.com/problems/sum-of-subarray-ranges/"
    },
    {
      "id": 193,
      "name": "Remove k digits",
      "link": "https://leetcode.com/problems/remove-k-digits/"
    },
    {
      "id": 194,
      "name": "Largest rectangle in histogram",
      "link": "https://leetcode.com/problems/largest-rectangle-in-histogram/"
    },
    {
      "id": 195,
      "name": "Maximal Rectangle",
      "link": "https://leetcode.com/problems/maximal-rectangle/"
    },
    {
      "id": 196,
      "name": "Sliding Window Maximum",
      "link": "https://leetcode.com/problems/sliding-window-maximum/"
    },
    {
      "id": 197,
      "name": "Stock span problem",
      "link": "https://leetcode.com/problems/online-stock-span/"
    },
    {
      "id": 198,
      "name": "Find the maximum of minimums of every window size",
      "link": "https://www.codingninjas.com/studio/problems/maximum-of-minimum-for-every-window-size_1221081"
    },
    {
      "id": 199,
      "name": "The Celebrity Problem",
      "link": "https://www.codingninjas.com/studio/problems/the-celebrity-problem_982769"
    },
    {
      "id": 200,
      "name": "Longest Substring Without Repeating Characters",
      "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters/"
    },
    {
      "id": 201,
      "name": "Max Consecutive Ones III",
      "link": "https://leetcode.com/problems/max-consecutive-ones-iii/"
    },
    {
      "id": 202,
      "name": "Fruit Into Baskets",
      "link": "https://leetcode.com/problems/fruit-into-baskets/"
    },
    {
      "id": 203,
      "name": "Longest Repeating Character Replacement",
      "link": "https://leetcode.com/problems/longest-repeating-character-replacement/"
    },
    {
      "id": 204,
      "name": "Binary Subarrays With Sum",
      "link": "https://leetcode.com/problems/binary-subarrays-with-sum/"
    },
    {
      "id": 205,
      "name": "Count Number of Nice Subarrays",
      "link": "https://leetcode.com/problems/count-number-of-nice-subarrays/"
    },
    {
      "id": 206,
      "name": "Number of Substrings Containing All Three Characters",
      "link": "https://leetcode.com/problems/number-of-substrings-containing-all-three-characters/"
    },
    {
      "id": 207,
      "name": "Maximum Points You Can Obtain from Cards",
      "link": "https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards/"
    },
    {
      "id": 208,
      "name": "Longest Substring with At Most K Distinct Characters",
      "link": "https://www.codingninjas.com/studio/problems/distinct-characters_2221410"
    },
    {
      "id": 209,
      "name": "Subarrays with K Different Integers",
      "link": "https://leetcode.com/problems/subarrays-with-k-different-integers/"
    },
    {
      "id": 210,
      "name": "Minimum Window Substring",
      "link": "https://leetcode.com/problems/minimum-window-substring/"
    },
    {
      "id": 211,
      "name": "Minimum Window Subsequence",
      "link": "https://www.codingninjas.com/studio/problems/minimum-window-subsequence_2181133"
    },
    {
      "id": 212,
      "name": "Introduction to Priority Queues using Binary Heaps",
      "link": "https://www.codingninjas.com/studio/problems/introduction-to-priority-queues_1062499"
    },
    {
      "id": 213,
      "name": "Min Heap and Max Heap Implementation",
      "link": "https://www.codingninjas.com/studio/problems/min-heap_4691801"
    },
    {
      "id": 214,
      "name": "Check if an array represents a heap or not",
      "link": "https://www.codingninjas.com/studio/problems/build-min-heap_1171167"
    },
    {
      "id": 215,
      "name": "Convert min Heap to max Heap",
      "link": "https://www.codingninjas.com/studio/problems/convert-min-heap-to-max-heap_1381084"
    },
    {
      "id": 216,
      "name": "Kth largest element in an array",
      "link": "https://leetcode.com/problems/kth-largest-element-in-an-array/"
    },
    {
      "id": 217,
      "name": "Kth smallest element in an array",
      "link": "https://www.codingninjas.com/studio/problems/kth-smallest-element_1062679"
    },
    {
      "id": 218,
      "name": "Sort K sorted array",
      "link": "https://www.codingninjas.com/studio/problems/sort-a-k-sorted-array_1118047"
    },
    {
      "id": 219,
      "name": "Merge M sorted Lists",
      "link": "https://leetcode.com/problems/merge-k-sorted-lists/"
    },
    {
      "id": 220,
      "name": "Replace each array element by its corresponding rank",
      "link": "https://www.codingninjas.com/studio/problems/replace-each-array-element-by-its-corresponding-rank_1118053"
    },
    {
      "id": 221,
      "name": "Task Scheduler",
      "link": "https://leetcode.com/problems/task-scheduler/"
    },
    {
      "id": 222,
      "name": "Hands of Straights",
      "link": "https://leetcode.com/problems/hand-of-straights/"
    },
    {
      "id": 223,
      "name": "Design twitter",
      "link": "https://leetcode.com/problems/design-twitter/"
    },
    {
      "id": 224,
      "name": "Connect n ropes with minimum cost",
      "link": "https://www.codingninjas.com/studio/problems/connect-n-ropes-with-minimum-cost_625783"
    },
    {
      "id": 225,
      "name": "Find Median from Data Stream",
      "link": "https://leetcode.com/problems/find-median-from-data-stream/"
    },
    {
      "id": 226,
      "name": "K most frequent elements",
      "link": "https://leetcode.com/problems/top-k-frequent-elements/"
    },
    {
      "id": 227,
      "name": "Maximum Sum Combination",
      "link": "https://www.codingninjas.com/studio/problems/k-max-sum-combinations_975322"
    },
    {
      "id": 228,
      "name": "Assign Cookies",
      "link": "https://leetcode.com/problems/assign-cookies/"
    },
    {
      "id": 229,
      "name": "Fractional Knapsack",
      "link": "https://www.codingninjas.com/studio/problems/fractional-knapsack_975286"
    },
    {
      "id": 230,
      "name": "Find minimum number of coins",
      "link": "https://www.codingninjas.com/studio/problems/find-minimum-number-of-coins_975277"
    },
    {
      "id": 231,
      "name": "Lemonade Change",
      "link": "https://leetcode.com/problems/lemonade-change/"
    },
    {
      "id": 232,
      "name": "Valid Parenthesis String",
      "link": "https://leetcode.com/problems/valid-parenthesis-string/"
    },
    {
      "id": 233,
      "name": "N meetings in one room",
      "link": "https://www.codingninjas.com/studio/problems/n-meetings-in-one-room_1062658"
    },
    {
      "id": 234,
      "name": "Jump Game",
      "link": "https://leetcode.com/problems/jump-game/"
    },
    {
      "id": 235,
      "name": "Jump Game II",
      "link": "https://leetcode.com/problems/jump-game-ii/"
    },
    {
      "id": 236,
      "name": "Minimum Platforms",
      "link": "https://www.codingninjas.com/studio/problems/minimum-number-of-platforms_799400"
    },
    {
      "id": 237,
      "name": "Job Sequencing Problem",
      "link": "https://www.codingninjas.com/studio/problems/job-sequencing-problem_1169460"
    },
    {
      "id": 238,
      "name": "Candy",
      "link": "https://leetcode.com/problems/candy/"
    },
    {
      "id": 239,
      "name": "Shortest Job First",
      "link": "https://www.codingninjas.com/studio/problems/shortest-job-first_1062634"
    },
    {
      "id": 240,
      "name": "Page Faults in LRU",
      "link": "https://www.codingninjas.com/studio/problems/lru-cache-implementation_670276"
    },
    {
      "id": 241,
      "name": "Insert Interval",
      "link": "https://leetcode.com/problems/insert-interval/"
    },
    {
      "id": 242,
      "name": "Merge Intervals",
      "link": "https://leetcode.com/problems/merge-intervals/"
    },
    {
      "id": 243,
      "name": "Non-overlapping Intervals",
      "link": "https://leetcode.com/problems/non-overlapping-intervals/"
    },
    {
      "id": 244,
      "name": "Introduction to Trees",
      "link": "https://www.codingninjas.com/studio/problems/introduction-to-trees_1262706"
    },
    {
      "id": 245,
      "name": "Binary Tree Representation",
      "link": "https://www.codingninjas.com/studio/problems/binary-tree-representation_1281299"
    },
    {
      "id": 246,
      "name": "Binary Tree Traversals",
      "link": "https://www.codingninjas.com/studio/problems/tree-traversal_981269"
    },
    {
      "id": 247,
      "name": "Preorder Traversal",
      "link": "https://leetcode.com/problems/binary-tree-preorder-traversal/"
    },
    {
      "id": 248,
      "name": "Inorder Traversal",
      "link": "https://leetcode.com/problems/binary-tree-inorder-traversal/"
    },
    {
      "id": 249,
      "name": "Postorder Traversal",
      "link": "https://leetcode.com/problems/binary-tree-postorder-traversal/"
    },
    {
      "id": 250,
      "name": "Level order Traversal",
      "link": "https://leetcode.com/problems/binary-tree-level-order-traversal/"
    },
    {
      "id": 251,
      "name": "Iterative Preorder Traversal",
      "link": "https://leetcode.com/problems/binary-tree-preorder-traversal/"
    },
    {
      "id": 252,
      "name": "Iterative Inorder Traversal",
      "link": "https://leetcode.com/problems/binary-tree-inorder-traversal/"
    },
    {
      "id": 253,
      "name": "Iterative Postorder Traversal",
      "link": "https://leetcode.com/problems/binary-tree-postorder-traversal/"
    },
    {
      "id": 254,
      "name": "All Traversals in One",
      "link": "https://www.codingninjas.com/studio/problems/tree-traversal_981269"
    },
    {
      "id": 255,
      "name": "Height of a Binary Tree",
      "link": "https://leetcode.com/problems/maximum-depth-of-binary-tree/"
    },
    {
      "id": 256,
      "name": "Check if the tree is height-balanced or not",
      "link": "https://leetcode.com/problems/balanced-binary-tree/"
    },
    {
      "id": 257,
      "name": "Diameter of Binary Tree",
      "link": "https://leetcode.com/problems/diameter-of-binary-tree/"
    },
    {
      "id": 258,
      "name": "Maximum path sum",
      "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum/"
    },
    {
      "id": 259,
      "name": "Check if two trees are identical or not",
      "link": "https://leetcode.com/problems/same-tree/"
    },
    {
      "id": 260,
      "name": "Zig Zag Traversal of Binary Tree",
      "link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/"
    },
    {
      "id": 261,
      "name": "Boundary Traversal of a Binary Tree",
      "link": "https://www.codingninjas.com/studio/problems/boundary-traversal_790725"
    },
    {
      "id": 262,
      "name": "Vertical Order Traversal of Binary Tree",
      "link": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/"
    },
    {
      "id": 263,
      "name": "Top View of Binary Tree",
      "link": "https://www.codingninjas.com/studio/problems/top-view-of-the-tree_799401"
    },
    {
      "id": 264,
      "name": "Bottom View of Binary Tree",
      "link": "https://www.codingninjas.com/studio/problems/bottom-view-of-binary-tree_893110"
    },
    {
      "id": 265,
      "name": "Right/Left View of Binary Tree",
      "link": "https://leetcode.com/problems/binary-tree-right-side-view/"
    },
    {
      "id": 266,
      "name": "Check for Symmetrical Binary Tree",
      "link": "https://leetcode.com/problems/symmetric-tree/"
    },
    {
      "id": 267,
      "name": "Root to Node Path in Binary Tree",
      "link": "https://www.codingninjas.com/studio/problems/path-in-a-tree_3843990"
    },
    {
      "id": 268,
      "name": "LCA in Binary Tree",
      "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/"
    },
    {
      "id": 269,
      "name": "Maximum width of a Binary Tree",
      "link": "https://leetcode.com/problems/maximum-width-of-binary-tree/"
    },
    {
      "id": 270,
      "name": "Check for Children Sum Property",
      "link": "https://www.codingninjas.com/studio/problems/children-sum-property_8357239"
    },
    {
      "id": 271,
      "name": "Print all the Nodes at a distance of K in a Binary Tree",
      "link": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/"
    },
    {
      "id": 272,
      "name": "Minimum time taken to BURN the Binary Tree from a Node",
      "link": "https://www.codingninjas.com/studio/problems/time-to-burn-tree_630563"
    },
    {
      "id": 273,
      "name": "Count total Nodes in a COMPLETE Binary Tree",
      "link": "https://leetcode.com/problems/count-complete-tree-nodes/"
    },
    {
      "id": 274,
      "name": "Requirements needed to construct a Unique Binary Tree",
      "link": "https://www.codingninjas.com/studio/problems/unique-binary-tree_8180906"
    },
    {
      "id": 275,
      "name": "Construct Binary Tree from Preorder and Inorder Traversal",
      "link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/"
    },
    {
      "id": 276,
      "name": "Construct the Binary Tree from Postorder and Inorder Traversal",
      "link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/"
    },
    {
      "id": 277,
      "name": "Serialize and deserialize Binary Tree",
      "link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/"
    },
    {
      "id": 278,
      "name": "Morris Preorder Traversal",
      "link": "https://www.codingninjas.com/studio/problems/morris-traversal_6628934"
    },
    {
      "id": 279,
      "name": "Morris Inorder Traversal",
      "link": "https://leetcode.com/problems/binary-tree-inorder-traversal/"
    },
    {
      "id": 280,
      "name": "Flatten Binary Tree to LinkedList",
      "link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/"
    },
    {
      "id": 281,
      "name": "Introduction to Binary Search Trees",
      "link": "https://www.codingninjas.com/studio/problems/introduction-to-binary-search-trees_8160671"
    },
    {
      "id": 282,
      "name": "Search in a Binary Search Tree",
      "link": "https://leetcode.com/problems/search-in-a-binary-search-tree/"
    },
    {
      "id": 283,
      "name": "Find Min/Max in BST",
      "link": "https://www.codingninjas.com/studio/problems/find-min-max-in-bst_8160679"
    },
    {
      "id": 284,
      "name": "Ceil in a BST",
      "link": "https://www.codingninjas.com/studio/problems/ceil-from-bst_920464"
    },
    {
      "id": 285,
      "name": "Floor in a BST",
      "link": "https://www.codingninjas.com/studio/problems/floor-from-bst_920457"
    },
    {
      "id": 286,
      "name": "Insert a given Node in Binary Search Tree",
      "link": "https://leetcode.com/problems/insert-into-a-binary-search-tree/"
    },
    {
      "id": 287,
      "name": "Delete a Node in Binary Search Tree",
      "link": "https://leetcode.com/problems/delete-node-in-a-bst/"
    },
    {
      "id": 288,
      "name": "Find K-th smallest/largest element in BST",
      "link": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/"
    },
    {
      "id": 289,
      "name": "Check if a tree is a BST or BT",
      "link": "https://leetcode.com/problems/validate-binary-search-tree/"
    },
    {
      "id": 290,
      "name": "LCA in Binary Search Tree",
      "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/"
    },
    {
      "id": 291,
      "name": "Construct a BST from a preorder traversal",
      "link": "https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/"
    },
    {
      "id": 292,
      "name": "Inorder Successor/Predecessor in BST",
      "link": "https://www.codingninjas.com/studio/problems/predecessor-and-successor-in-bst_893049"
    },
    {
      "id": 293,
      "name": "BST Iterator",
      "link": "https://leetcode.com/problems/binary-search-tree-iterator/"
    },
    {
      "id": 294,
      "name": "Two Sum In BST",
      "link": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/"
    },
    {
      "id": 295,
      "name": "Recover BST",
      "link": "https://leetcode.com/problems/recover-binary-search-tree/"
    },
    {
      "id": 296,
      "name": "Largest BST in Binary Tree",
      "link": "https://www.codingninjas.com/studio/problems/largest-bst-subtree_893103"
    },
    {
      "id": 297,
      "name": "Graph Representation",
      "link": "https://www.codingninjas.com/studio/problems/creating-and-printing_1214551"
    },
    {
      "id": 298,
      "name": "BFS",
      "link": "https://www.codingninjas.com/studio/problems/bfs-in-graph_973002"
    },
    {
      "id": 299,
      "name": "DFS",
      "link": "https://www.codingninjas.com/studio/problems/dfs-traversal_630462"
    },
    {
      "id": 300,
      "name": "Number of provinces",
      "link": "https://leetcode.com/problems/number-of-provinces/"
    },
    {
      "id": 301,
      "name": "Connected Components Problem in Matrix",
      "link": "https://leetcode.com/problems/number-of-islands/"
    },
    {
      "id": 302,
      "name": "Rotten Oranges",
      "link": "https://leetcode.com/problems/rotting-oranges/"
    },
    {
      "id": 303,
      "name": "Flood fill",
      "link": "https://leetcode.com/problems/flood-fill/"
    },
    {
      "id": 304,
      "name": "0/1 Matrix (Bfs Problem)",
      "link": "https://leetcode.com/problems/01-matrix/"
    },
    {
      "id": 305,
      "name": "Surrounded Regions (dfs)",
      "link": "https://leetcode.com/problems/surrounded-regions/"
    },
    {
      "id": 306,
      "name": "Number of Enclaves",
      "link": "https://leetcode.com/problems/number-of-enclaves/"
    },
    {
      "id": 307,
      "name": "Word ladder - 1",
      "link": "https://leetcode.com/problems/word-ladder/"
    },
    {
      "id": 308,
      "name": "Word ladder - 2",
      "link": "https://leetcode.com/problems/word-ladder-ii/"
    },
    {
      "id": 309,
      "name": "Number of Distinct Islands",
      "link": "https://www.codingninjas.com/studio/problems/distinct-islands_8230707"
    },
    {
      "id": 310,
      "name": "Bipartite Graph (DFS)",
      "link": "https://leetcode.com/problems/is-graph-bipartite/"
    },
    {
      "id": 311,
      "name": "Cycle Detection in unirected Graph (DFS)",
      "link": "https://www.codingninjas.com/studio/problems/cycle-detection-in-undirected-graph_1062670"
    },
    {
      "id": 312,
      "name": "Cycle Detection in directed Graph (DFS)",
      "link": "https://www.codingninjas.com/studio/problems/detect-cycle-in-a-directed-graph_1062626"
    },
    {
      "id": 314,
      "name": "Topological Sort Algorithm (BFS)",
      "link": "https://www.codingninjas.com/studio/problems/topological-sort_982938"
    },
    {
      "id": 316,
      "name": "Course Schedule - I",
      "link": "https://leetcode.com/problems/course-schedule/"
    },
    {
      "id": 317,
      "name": "Course Schedule - II",
      "link": "https://leetcode.com/problems/course-schedule-ii/"
    },
    {
      "id": 318,
      "name": "Find Eventual Safe States",
      "link": "https://leetcode.com/problems/find-eventual-safe-states/"
    },
    {
      "id": 319,
      "name": "Alien Dictionary",
      "link": "https://www.codingninjas.com/studio/problems/alien-dictionary_630423"
    },
    {
      "id": 320,
      "name": "Shortest Path in UG with unit weights",
      "link": "https://www.codingninjas.com/studio/problems/shortest-path-in-an-unweighted-graph_981297"
    },
    {
      "id": 321,
      "name": "Shortest Path in DAG",
      "link": "https://www.codingninjas.com/studio/problems/shortest-path-in-dag_8381897"
    },
    {
      "id": 322,
      "name": "Dijkstra's Algorithm",
      "link": "https://www.codingninjas.com/studio/problems/dijkstra-s-shortest-path_920469"
    },
    {
      "id": 323,
      "name": "Why Dijkstra's Algorithm fails for negative weights",
      "link": "https://www.codingninjas.com/studio/problems/dijkstra-s-shortest-path_920469"
    },
    {
      "id": 324,
      "name": "Bellman Ford Algorithm",
      "link": "https://www.codingninjas.com/studio/problems/bellman-ford_2041977"
    },
    {
      "id": 325,
      "name": "Floyd Warshall Algorithm",
      "link": "https://www.codingninjas.com/studio/problems/floyd-warshall_2041979"
    },
    {
      "id": 326,
      "name": "Find the city with the smallest number of neighbors at a threshold distance",
      "link": "https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/"
    },
    {
      "id": 327,
      "name": "Cheapest flights within k stops",
      "link": "https://leetcode.com/problems/cheapest-flights-within-k-stops/"
    },
    {
      "id": 328,
      "name": "Network Delay Time",
      "link": "https://leetcode.com/problems/network-delay-time/"
    },
    {
      "id": 329,
      "name": "Number of ways to arrive at destination",
      "link": "https://leetcode.com/problems/number-of-ways-to-arrive-at-destination/"
    },
    {
      "id": 330,
      "name": "Minimum steps to reach end from start by performing multiplication and mod operations with array elements",
      "link": "https://www.codingninjas.com/studio/problems/minimum-multiplications-to-reach-end_8382440"
    },
    {
      "id": 331,
      "name": "Path with minimum effort",
      "link": "https://leetcode.com/problems/path-with-minimum-effort/"
    },
    {
      "id": 332,
      "name": "Minimum Spanning Tree",
      "link": "https://www.codingninjas.com/studio/problems/minimum-spanning-tree_631769"
    },
    {
      "id": 333,
      "name": "Prim's Algorithm",
      "link": "https://www.codingninjas.com/studio/problems/prim-s-mst_1095633"
    },
    {
      "id": 334,
      "name": "Disjoint Set [Union by Rank]",
      "link": "https://www.codingninjas.com/studio/problems/disjoint-set-union_8382049"
    },
    {
      "id": 335,
      "name": "Disjoint Set [Union by Size]",
      "link": "https://www.codingninjas.com/studio/problems/disjoint-set-union_8382049"
    },
    {
      "id": 336,
      "name": "Kruskal's Algorithm",
      "link": "https://www.codingninjas.com/studio/problems/kruskal-s-minimum-spanning-tree-algorithm_1082553"
    },
    {
      "id": 337,
      "name": "Number of operations to make network connected",
      "link": "https://leetcode.com/problems/number-of-operations-to-make-network-connected/"
    },
    {
      "id": 338,
      "name": "Most stones removed with same rows or columns",
      "link": "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/"
    },
    {
      "id": 339,
      "name": "Accounts merge",
      "link": "https://leetcode.com/problems/accounts-merge/"
    },
    {
      "id": 340,
      "name": "Number of islands II",
      "link": "https://www.codingninjas.com/studio/problems/number-of-islands-ii_1266048"
    },
    {
      "id": 341,
      "name": "Making a Large Island",
      "link": "https://leetcode.com/problems/making-a-large-island/"
    },
    {
      "id": 342,
      "name": "Swim in rising water",
      "link": "https://leetcode.com/problems/swim-in-rising-water/"
    },
    {
      "id": 343,
      "name": "Bridges in Graph",
      "link": "https://www.codingninjas.com/studio/problems/bridges-in-graph_893026"
    },
    {
      "id": 344,
      "name": "Articulation Point in Graph",
      "link": "https://www.codingninjas.com/studio/problems/articulation-points_1266049"
    },
    {
      "id": 345,
      "name": "Kosaraju's Algorithm",
      "link": "https://www.codingninjas.com/studio/problems/strongly-connected-components-kosaraju-s-algorithm_1171151"
    },
    {
      "id": 346,
      "name": "Introduction to DP",
      "link": "https://www.codingninjas.com/studio/problems/introduction-to-dp_8357275"
    },
    {
      "id": 347,
      "name": "Climbing Stars",
      "link": "https://leetcode.com/problems/climbing-stairs/"
    },
    {
      "id": 348,
      "name": "Frog Jump",
      "link": "https://www.codingninjas.com/studio/problems/frog-jump_3621012"
    },
    {
      "id": 349,
      "name": "Frog Jump with k distances",
      "link": "https://www.codingninjas.com/studio/problems/minimal-cost_8180930"
    },
    {
      "id": 350,
      "name": "Maximum sum of non-adjacent elements",
      "link": "https://www.codingninjas.com/studio/problems/maximum-sum-of-non-adjacent-elements_843261"
    },
    {
      "id": 351,
      "name": "House Robber",
      "link": "https://leetcode.com/problems/house-robber/"
    },
    {
      "id": 352,
      "name": "House Robber 2",
      "link": "https://leetcode.com/problems/house-robber-ii/"
    },
    {
      "id": 353,
      "name": "Ninja's Training",
      "link": "https://www.codingninjas.com/studio/problems/ninja-s-training_3621003"
    },
    {
      "id": 354,
      "name": "Grid Unique Paths",
      "link": "https://leetcode.com/problems/unique-paths/"
    },
    {
      "id": 355,
      "name": "Grid Unique Paths 2",
      "link": "https://leetcode.com/problems/unique-paths-ii/"
    },
    {
      "id": 356,
      "name": "Minimum path sum in Grid",
      "link": "https://leetcode.com/problems/minimum-path-sum/"
    },
    {
      "id": 357,
      "name": "Minimum path sum in Triangular Grid",
      "link": "https://leetcode.com/problems/triangle/"
    },
    {
      "id": 358,
      "name": "Minimum/Maximum Falling Path Sum",
      "link": "https://leetcode.com/problems/minimum-falling-path-sum/"
    },
    {
      "id": 359,
      "name": "3-d DP : Ninja and his friends",
      "link": "https://www.codingninjas.com/studio/problems/ninja-and-his-friends_3125885"
    },
    {
      "id": 360,
      "name": "Subset sum equal to target",
      "link": "https://www.codingninjas.com/studio/problems/subset-sum-equal-to-k_1550954"
    },
    {
      "id": 361,
      "name": "Partition Equal Subset Sum",
      "link": "https://leetcode.com/problems/partition-equal-subset-sum/"
    },
    {
      "id": 362,
      "name": "Partition Set Into 2 Subsets With Min Absolute Sum Diff",
      "link": "https://www.codingninjas.com/studio/problems/partition-a-set-into-two-subsets-such-that-the-difference-of-subset-sums-is-minimum_842494"
    },
    {
      "id": 363,
      "name": "Count Subsets with Sum K",
      "link": "https://www.codingninjas.com/studio/problems/number-of-subsets_3952532"
    },
    {
      "id": 364,
      "name": "Count partitions with given difference",
      "link": "https://www.codingninjas.com/studio/problems/partitions-with-given-difference_3751628"
    },
    {
      "id": 365,
      "name": "0/1 Knapsack",
      "link": "https://www.codingninjas.com/studio/problems/0-1-knapsack_920542"
    },
    {
      "id": 366,
      "name": "Minimum Coins",
      "link": "https://leetcode.com/problems/coin-change/"
    },
    {
      "id": 367,
      "name": "Target Sum",
      "link": "https://leetcode.com/problems/target-sum/"
    },
    {
      "id": 368,
      "name": "Coin Change 2",
      "link": "https://leetcode.com/problems/coin-change-2/"
    },
    {
      "id": 369,
      "name": "Unbounded Knapsack",
      "link": "https://www.codingninjas.com/studio/problems/unbounded-knapsack_1215029"
    },
    {
      "id": 370,
      "name": "Rod Cutting Problem",
      "link": "https://www.codingninjas.com/studio/problems/rod-cutting-problem_800284"
    },
    {
      "id": 371,
      "name": "Longest Common Subsequence",
      "link": "https://leetcode.com/problems/longest-common-subsequence/"
    },
    {
      "id": 372,
      "name": "Print Longest Common Subsequence",
      "link": "https://www.codingninjas.com/studio/problems/print-longest-common-subsequence_8416383"
    },
    {
      "id": 373,
      "name": "Longest Common Substring",
      "link": "https://www.codingninjas.com/studio/problems/longest-common-substring_1235207"
    },
    {
      "id": 374,
      "name": "Longest Palindromic Subsequence",
      "link": "https://leetcode.com/problems/longest-palindromic-subsequence/"
    },
    {
      "id": 375,
      "name": "Minimum insertions to make string palindrome",
      "link": "https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/"
    },
    {
      "id": 376,
      "name": "Minimum Insertions/Deletions to Convert String",
      "link": "https://leetcode.com/problems/delete-operation-for-two-strings/"
    },
    {
      "id": 377,
      "name": "Shortest Common Supersequence",
      "link": "https://leetcode.com/problems/shortest-common-supersequence/"
    },
    {
      "id": 378,
      "name": "Distinct Subsequences",
      "link": "https://leetcode.com/problems/distinct-subsequences/"
    },
    {
      "id": 379,
      "name": "Edit Distance",
      "link": "https://leetcode.com/problems/edit-distance/"
    },
    {
      "id": 380,
      "name": "Wildcard Matching",
      "link": "https://leetcode.com/problems/wildcard-matching/"
    },
    {
      "id": 381,
      "name": "Best Time to Buy and Sell Stock",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/"
    },
    {
      "id": 382,
      "name": "Buy and Sell Stock - II",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/"
    },
    {
      "id": 383,
      "name": "Buy and Sell Stocks III",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/"
    },
    {
      "id": 384,
      "name": "Buy and Stock Sell IV",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/"
    },
    {
      "id": 385,
      "name": "Buy and Sell Stocks With Cooldown",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/"
    },
    {
      "id": 386,
      "name": "Buy and Sell Stocks With Transaction Fee",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/"
    },
    {
      "id": 387,
      "name": "Longest Increasing Subsequence",
      "link": "https://leetcode.com/problems/longest-increasing-subsequence/"
    },
    {
      "id": 388,
      "name": "Printing Longest Increasing Subsequence",
      "link": "https://www.codingninjas.com/studio/problems/printing-longest-increasing-subsequence_8360670"
    },
    {
      "id": 389,
      "name": "Longest Increasing Subsequence",
      "link": "https://leetcode.com/problems/longest-increasing-subsequence/"
    },
    {
      "id": 390,
      "name": "Largest Divisible Subset",
      "link": "https://leetcode.com/problems/largest-divisible-subset/"
    },
    {
      "id": 391,
      "name": "Longest String Chain",
      "link": "https://leetcode.com/problems/longest-string-chain/"
    },
    {
      "id": 392,
      "name": "Longest Bitonic Subsequence",
      "link": "https://www.codingninjas.com/studio/problems/longest-bitonic-sequence_1062688"
    },
    {
      "id": 393,
      "name": "Number of Longest Increasing Subsequences",
      "link": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/"
    },
    {
      "id": 394,
      "name": "Matrix Chain Multiplication",
      "link": "https://www.codingninjas.com/studio/problems/matrix-chain-multiplication_975344"
    },
    {
      "id": 395,
      "name": "Minimum Cost to Cut the Stick",
      "link": "https://leetcode.com/problems/minimum-cost-to-cut-a-stick/"
    },
    {
      "id": 396,
      "name": "Burst Balloons",
      "link": "https://leetcode.com/problems/burst-balloons/"
    },
    {
      "id": 397,
      "name": "Evaluate Boolean Expression to True",
      "link": "https://www.codingninjas.com/studio/problems/problem-name-boolean-evaluation_1214650"
    },
    {
      "id": 398,
      "name": "Palindrome Partitioning - II",
      "link": "https://leetcode.com/problems/palindrome-partitioning-ii/"
    },
    {
      "id": 399,
      "name": "Partition Array for Maximum Sum",
      "link": "https://leetcode.com/problems/partition-array-for-maximum-sum/"
    },
    {
      "id": 400,
      "name": "Maximum Rectangle Binary Matrix",
      "link": "https://leetcode.com/problems/maximal-rectangle/"
    },
    {
      "id": 401,
      "name": "Count Square Submatrices with All Ones",
      "link": "https://leetcode.com/problems/count-square-submatrices-with-all-ones/"
    },
    {
      "id": 402,
      "name": "Implement Trie (Prefix Tree)",
      "link": "https://leetcode.com/problems/implement-trie-prefix-tree/"
    },
    {
      "id": 403,
      "name": "Implement Trie - 2",
      "link": "https://www.codingninjas.com/studio/problems/implement-trie_1387095"
    },
    {
      "id": 404,
      "name": "Longest String with All Prefixes",
      "link": "https://www.codingninjas.com/studio/problems/complete-string_2687860"
    },
    {
      "id": 405,
      "name": "Number of Distinct Substrings",
      "link": "https://www.codingninjas.com/studio/problems/count-distinct-substrings_985292"
    },
    {
      "id": 406,
      "name": "Bit PreRequisites for TRIE Problems",
      "link": "https://www.codingninjas.com/studio/problems/maximum-xor-of-an-array-with-an-element_1118111"
    },
    {
      "id": 407,
      "name": "Maximum XOR of an array with an element",
      "link": "https://www.codingninjas.com/studio/problems/maximum-xor-of-an-array-with-an-element_1118111"
    },
    {
      "id": 408,
      "name": "Maximum XOR of two numbers in an array",
      "link": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/"
    },
    {
      "id": 409,
      "name": "Z-Algorithm",
      "link": "https://www.codingninjas.com/studio/problems/z-algorithm_1115924"
    },
    {
      "id": 410,
      "name": "KMP Algorithm / LPS(pi) Array",
      "link": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/"
    },
    {
      "id": 411,
      "name": "Minimum characters needed to be inserted in the beginning to make it palindromic",
      "link": "https://www.codingninjas.com/studio/problems/minimum-characters-for-palindrome_893000"
    },
    {
      "id": 412,
      "name": "Check for Anagrams",
      "link": "https://leetcode.com/problems/valid-anagram/"
    },
    {
      "id": 413,
      "name": "Count and Say",
      "link": "https://leetcode.com/problems/count-and-say/"
    },
    {
      "id": 414,
      "name": "Compare version numbers",
      "link": "https://leetcode.com/problems/compare-version-numbers/"
    },
    {
      "id": 315,
      "name": "Cycle Detection in Directed Graph (BFS)",
      "link": "https://www.codingninjas.com/studio/problems/detect-cycle-in-a-directed-graph_1062626"
    },
    {
      "id": 15,
      "name": "Print N to 1 using Recursion",
      "link": "https://www.codingninjas.com/studio/problems/print-n-to-1_628297"
    },
    {
      "id": 116,
      "name": "Sum of Beauty of All Substrings",
      "link": "https://leetcode.com/problems/sum-of-beauty-of-all-substrings/"
    },
    {
      "id": 313,
      "name": "Topological Sort Algorithm (DFS)",
      "link": "https://www.codingninjas.com/studio/problems/topological-sort_982938"
    }
  ],
  "mastered": []
}